project_name: ns

builds:
  - id: linux-ns
    env:
      - CGO_ENABLED=0
    main: ./cmd/ns
    binary: ns
    flags:
      - -trimpath
    ldflags:
      - -s -w -X namespacelabs.dev/foundation/internal/cli/version.Tag=v{{.Version}}
    goos:
      - linux
    goarch:
      - amd64
      - arm64

  - id: macos-ns
    env:
      - CGO_ENABLED=1
    main: ./cmd/ns
    binary: ns
    flags:
      - -trimpath
    ldflags:
      - -s -w -X namespacelabs.dev/foundation/internal/cli/version.Tag=v{{.Version}}
    goos:
      - darwin
    goarch:
      - amd64
      - arm64

  - id: linux-nsc
    env:
      - CGO_ENABLED=0
    main: ./cmd/nsc
    binary: nsc
    flags:
      - -trimpath
    ldflags:
      - -s -w -X namespacelabs.dev/foundation/internal/cli/version.Tag=v{{.Version}}
    goos:
      - linux
    goarch:
      - amd64
      - arm64

  - id: macos-nsc
    env:
      - CGO_ENABLED=0
    main: ./cmd/nsc
    binary: nsc
    flags:
      - -trimpath
    ldflags:
      - -s -w -X namespacelabs.dev/foundation/internal/cli/version.Tag=v{{.Version}}
    goos:
      - darwin
    goarch:
      - amd64
      - arm64

  - id: linux-docker-credential-nsc
    env:
      - CGO_ENABLED=0
    main: ./cmd/docker-credential-nsc
    binary: docker-credential-nsc
    flags:
      - -trimpath
    ldflags:
      - -s -w -X namespacelabs.dev/foundation/internal/cli/version.Tag=v{{.Version}}
    goos:
      - linux
    goarch:
      - amd64
      - arm64

  - id: macos-docker-credential-nsc
    env:
      - CGO_ENABLED=0
    main: ./cmd/docker-credential-nsc
    binary: docker-credential-nsc
    flags:
      - -trimpath
    ldflags:
      - -s -w -X namespacelabs.dev/foundation/internal/cli/version.Tag=v{{.Version}}
    goos:
      - darwin
    goarch:
      - amd64
      - arm64

archives:
  - id: ns
    builds:
      - linux-ns
      - macos-ns
    name_template: "ns_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

  - id: nsc
    builds:
      - linux-nsc
      - linux-docker-credential-nsc
      - macos-nsc
      - macos-docker-credential-nsc
    name_template: "nsc_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

# signs:
#   - signature: "${artifact}_macos.dmg"
#     ids:
#       - macos
#     cmd: gon
#     args:
#       - cmd/ns/gon.hcl
#     artifacts: all

release:
  github:
    owner: namespacelabs
    name: foundation
  draft: true
  replace_existing_draft: false
  # extra_files:
  #   - glob: ./dist/fn_macos.dmg
  #   - glob: ./dist/fn_macos.zip

checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-snapshot"
changelog:
  use: git
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^nochangelog"
      - "^Merge pull request"
      - "^Merge branch"

brews:
  - repository:
      owner: namespacelabs
      name: homebrew-namespace
    name: ns
    ids:
      - ns
    description: "Developer platform with a unified experience from development to production."
    homepage: "https://namespacelabs.com/"
    caveats: |
      Note: ns collects usage telemetry. This data helps us build a better
      platform for you. You can learn more at https://namespace.so/telemetry.

      Check out our examples at https://namespace.so/docs#examples to get started.
    url_template: "https://get.namespace.so/packages/ns/v{{.Version}}/{{.ArtifactName}}"
    install: |
      bin.install "ns"
  - repository:
      owner: namespacelabs
      name: homebrew-namespace
    name: nsc
    ids:
      - nsc
    description: "Container-optimized cloud infrastructure that just works."
    homepage: "https://namespace.so/"
    url_template: "https://get.namespace.so/packages/nsc/v{{.Version}}/{{.ArtifactName}}"
    install: |
      bin.install "nsc"
      bin.install "docker-credential-nsc"
    service: |
      run [opt_bin/"nsc", "docker", "buildx", "setup", "--use", "--force_cleanup", "--debug_to_file", var/"nsc/log/buildx.log"]
      run_at_load false
      keep_alive true
      environment_variables NS_DO_NOT_UPDATE: true